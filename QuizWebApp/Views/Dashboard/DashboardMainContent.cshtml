@model QuizWebApp.Models.DashboardViewModel
@using QuizWebApp.Models
<div class="table-responsive panel panel-default">
    <table id="dashboard-table" class="table dashboard table-bordered table-condensed">
        <thead>
            <tr>
                <th class="col-fix">Pos</th>
                <th class="col-fix">Name</th>
                <th class="col-fix">Score</th>
                @foreach (var qr in Model.QuestionRounds)
                {
                    foreach (var question in qr.Questions)
                    {
                        <th>@(qr.Round.SortOrder + "/" + question.SortOrder)</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                var lastScore = int.MaxValue;
                var currentPlace = 0;
            }
            @foreach (var player in Model.Players)
            {
                <tr>
                    <td class="col-fix" style="background-color:rgb(@player.Red, @player.Green, 0);">
                        @{
                            currentPlace++;
                            if (lastScore != player.CurrentScore)
                            {
                                lastScore = player.CurrentScore;
                                @currentPlace // only show when different score than previous player in ranking
                            }
                        }
                        &nbsp;
                    </td>
                    <td class="col-fix" style="background-color:rgb(@player.Red, @player.Green, 0);">
                        <strong>@player.Name</strong>
                    </td>
                    <td class="col-fix text-right" style="background-color:rgb(@player.Red, @player.Green, 0);">
                        @player.CurrentScore
                    </td>
                    @foreach (var qr in Model.QuestionRounds)
                    {
                        foreach (var q in qr.Questions)
                        {
                            Answer ans;
                            if (Model.Answers.ContainsKey(player.UserId) &&
                                Model.Answers[player.UserId].ContainsKey(q.QuestionId))
                            {
                                ans = Model.Answers[player.UserId][q.QuestionId];
                            }
                            else
                            {
                                ans = new Answer(); // empty answer
                            }
                            <td><span class="answer-status answer-status-@ans.Status">@(ans.AssignedValue == 0 ? " " : ans.AssignedValue.ToString())</span></td>
                        }
                    }
                </tr>
                            }
        </tbody>
    </table>
</div>
